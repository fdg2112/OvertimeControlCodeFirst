// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OvertimeControlCodeFirst.Data;

#nullable disable

namespace OvertimeControlCodeFirst.Migrations
{
    [DbContext(typeof(OvertimeDbContext))]
    [Migration("20250603141400_RemoveRoleId1FromUsers")]
    partial class RemoveRoleId1FromUsers
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ControlHorasExtras.Models.OvertimeExpenseView", b =>
                {
                    b.Property<int>("HourType")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalExpense")
                        .HasColumnType("decimal(18,2)");

                    b.ToTable((string)null);

                    b.ToView("OvertimeExpenseView", (string)null);
                });

            modelBuilder.Entity("OvertimeControlCodeFirst.Models.Area", b =>
                {
                    b.Property<int>("AreaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AreaId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("SecretariatId")
                        .HasColumnType("int");

                    b.HasKey("AreaId");

                    b.HasIndex("SecretariatId");

                    b.ToTable("Areas");
                });

            modelBuilder.Entity("OvertimeControlCodeFirst.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeId"));

                    b.Property<DateOnly>("AdmissionDate")
                        .HasColumnType("date");

                    b.Property<int?>("AreaId")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RecordNumber")
                        .HasColumnType("int");

                    b.Property<int>("SalaryCategoryId")
                        .HasColumnType("int");

                    b.Property<int>("SecretariatId")
                        .HasColumnType("int");

                    b.HasKey("EmployeeId");

                    b.HasIndex("AreaId");

                    b.HasIndex("SalaryCategoryId");

                    b.HasIndex("SecretariatId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("OvertimeControlCodeFirst.Models.HourLimit", b =>
                {
                    b.Property<int>("HourLimitId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HourLimitId"));

                    b.Property<int>("AreaId")
                        .HasColumnType("int");

                    b.Property<int>("Limit")
                        .HasColumnType("int");

                    b.Property<int>("Month")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("HourLimitId");

                    b.HasIndex("AreaId");

                    b.ToTable("HoursLimit");
                });

            modelBuilder.Entity("OvertimeControlCodeFirst.Models.LoginAudit", b =>
                {
                    b.Property<int>("LoginAuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LoginAuditId"));

                    b.Property<string>("IpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LoginDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LogoutDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginAuditId");

                    b.HasIndex("UserId");

                    b.ToTable("LoginAudits");
                });

            modelBuilder.Entity("OvertimeControlCodeFirst.Models.Overtime", b =>
                {
                    b.Property<int>("OvertimeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OvertimeId"));

                    b.Property<int>("AreaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateStart")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("HourType")
                        .HasColumnType("int");

                    b.Property<int>("HoursQuantity")
                        .HasColumnType("int");

                    b.Property<int>("SecretariatId")
                        .HasColumnType("int");

                    b.Property<int>("WorkActivityId")
                        .HasColumnType("int");

                    b.HasKey("OvertimeId");

                    b.HasIndex("AreaId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("SecretariatId");

                    b.HasIndex("WorkActivityId");

                    b.ToTable("Overtimes");
                });

            modelBuilder.Entity("OvertimeControlCodeFirst.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("RoleId");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("OvertimeControlCodeFirst.Models.SalaryCategory", b =>
                {
                    b.Property<int>("SalaryCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SalaryCategoryId"));

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.HasKey("SalaryCategoryId");

                    b.ToTable("SalaryCategories");
                });

            modelBuilder.Entity("OvertimeControlCodeFirst.Models.SalaryCategoryValue", b =>
                {
                    b.Property<int>("SalaryCategoryValueId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SalaryCategoryValueId"));

                    b.Property<decimal>("BaseSalary")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("FromMonth")
                        .HasColumnType("int");

                    b.Property<int>("FromYear")
                        .HasColumnType("int");

                    b.Property<int>("SalaryCategoryId")
                        .HasColumnType("int");

                    b.Property<int?>("ToMonth")
                        .HasColumnType("int");

                    b.Property<int?>("ToYear")
                        .HasColumnType("int");

                    b.HasKey("SalaryCategoryValueId");

                    b.HasIndex("SalaryCategoryId");

                    b.ToTable("SalaryCategoryValues");
                });

            modelBuilder.Entity("OvertimeControlCodeFirst.Models.Secretariat", b =>
                {
                    b.Property<int>("SecretariatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SecretariatId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("SecretariatId");

                    b.ToTable("Secretariats");
                });

            modelBuilder.Entity("OvertimeControlCodeFirst.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<int?>("AreaId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int?>("RoleId1")
                        .HasColumnType("int");

                    b.Property<int?>("SecretariatId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("UserId");

                    b.HasIndex("AreaId");

                    b.HasIndex("RoleId");

                    b.HasIndex("RoleId1");

                    b.HasIndex("SecretariatId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("OvertimeControlCodeFirst.Models.WorkActivity", b =>
                {
                    b.Property<int>("WorkActivityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WorkActivityId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WorkplaceId")
                        .HasColumnType("int");

                    b.HasKey("WorkActivityId");

                    b.HasIndex("WorkplaceId");

                    b.ToTable("WorkActivities");
                });

            modelBuilder.Entity("OvertimeControlCodeFirst.Models.Workplace", b =>
                {
                    b.Property<int>("WorkplaceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WorkplaceId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("WorkplaceId");

                    b.ToTable("Workplaces");
                });

            modelBuilder.Entity("OvertimeControlCodeFirst.Models.Area", b =>
                {
                    b.HasOne("OvertimeControlCodeFirst.Models.Secretariat", "Secretariat")
                        .WithMany("Areas")
                        .HasForeignKey("SecretariatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Secretariat");
                });

            modelBuilder.Entity("OvertimeControlCodeFirst.Models.Employee", b =>
                {
                    b.HasOne("OvertimeControlCodeFirst.Models.Area", "Area")
                        .WithMany()
                        .HasForeignKey("AreaId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("OvertimeControlCodeFirst.Models.SalaryCategory", "SalaryCategory")
                        .WithMany()
                        .HasForeignKey("SalaryCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OvertimeControlCodeFirst.Models.Secretariat", "Secretariat")
                        .WithMany()
                        .HasForeignKey("SecretariatId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Area");

                    b.Navigation("SalaryCategory");

                    b.Navigation("Secretariat");
                });

            modelBuilder.Entity("OvertimeControlCodeFirst.Models.HourLimit", b =>
                {
                    b.HasOne("OvertimeControlCodeFirst.Models.Area", "Area")
                        .WithMany()
                        .HasForeignKey("AreaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Area");
                });

            modelBuilder.Entity("OvertimeControlCodeFirst.Models.LoginAudit", b =>
                {
                    b.HasOne("OvertimeControlCodeFirst.Models.User", "User")
                        .WithMany("LoginAudits")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("OvertimeControlCodeFirst.Models.Overtime", b =>
                {
                    b.HasOne("OvertimeControlCodeFirst.Models.Area", "Area")
                        .WithMany()
                        .HasForeignKey("AreaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("OvertimeControlCodeFirst.Models.Employee", "Employee")
                        .WithMany("Overtimes")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("OvertimeControlCodeFirst.Models.Secretariat", "Secretariat")
                        .WithMany()
                        .HasForeignKey("SecretariatId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("OvertimeControlCodeFirst.Models.WorkActivity", "WorkActivity")
                        .WithMany()
                        .HasForeignKey("WorkActivityId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Area");

                    b.Navigation("Employee");

                    b.Navigation("Secretariat");

                    b.Navigation("WorkActivity");
                });

            modelBuilder.Entity("OvertimeControlCodeFirst.Models.SalaryCategoryValue", b =>
                {
                    b.HasOne("OvertimeControlCodeFirst.Models.SalaryCategory", "SalaryCategory")
                        .WithMany("SalaryCategoryValues")
                        .HasForeignKey("SalaryCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SalaryCategory");
                });

            modelBuilder.Entity("OvertimeControlCodeFirst.Models.User", b =>
                {
                    b.HasOne("OvertimeControlCodeFirst.Models.Area", "Area")
                        .WithMany()
                        .HasForeignKey("AreaId");

                    b.HasOne("OvertimeControlCodeFirst.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("OvertimeControlCodeFirst.Models.Role", null)
                        .WithMany("Users")
                        .HasForeignKey("RoleId1");

                    b.HasOne("OvertimeControlCodeFirst.Models.Secretariat", "Secretariat")
                        .WithMany()
                        .HasForeignKey("SecretariatId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Area");

                    b.Navigation("Role");

                    b.Navigation("Secretariat");
                });

            modelBuilder.Entity("OvertimeControlCodeFirst.Models.WorkActivity", b =>
                {
                    b.HasOne("OvertimeControlCodeFirst.Models.Workplace", "Workplace")
                        .WithMany("WorkActivities")
                        .HasForeignKey("WorkplaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Workplace");
                });

            modelBuilder.Entity("OvertimeControlCodeFirst.Models.Employee", b =>
                {
                    b.Navigation("Overtimes");
                });

            modelBuilder.Entity("OvertimeControlCodeFirst.Models.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("OvertimeControlCodeFirst.Models.SalaryCategory", b =>
                {
                    b.Navigation("SalaryCategoryValues");
                });

            modelBuilder.Entity("OvertimeControlCodeFirst.Models.Secretariat", b =>
                {
                    b.Navigation("Areas");
                });

            modelBuilder.Entity("OvertimeControlCodeFirst.Models.User", b =>
                {
                    b.Navigation("LoginAudits");
                });

            modelBuilder.Entity("OvertimeControlCodeFirst.Models.Workplace", b =>
                {
                    b.Navigation("WorkActivities");
                });
#pragma warning restore 612, 618
        }
    }
}
